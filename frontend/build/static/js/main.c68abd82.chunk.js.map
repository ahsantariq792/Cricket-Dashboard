{"version":3,"sources":["images/bat.png","images/ball.png","core.js","images/loadinglive.gif","components/Dashboard.js","components/Control.js","components/Navbar.js","components/Admin.js","App.js","reportWebVitals.js","index.js"],"names":["baseurl","window","location","hostname","split","Dashboard","useState","posts","setPosts","useEffect","axios","get","withCredentials","then","response","console","log","data","catch","err","alert","socket","io","on","message","prev","close","className","map","index","id","teamA","teamB","format","battingteam","src","loading","Bat","runs","wicket","batsmanA","batsmanAruns","batsmanAballs","batsmanB","batsmanBruns","batsmanBballs","runrate","Ball","overs","bowlerA","bowlerAover","bowlerAruns","bowlerAwickets","bowlerB","bowlerBover","bowlerBruns","target","yup","post","min","required","Control","Navigation","Navbar","bg","expand","Container","Brand","Toggle","Collapse","Nav","to","Admin","bowlerBwickets","score","setScore","onSubmit","res","TextField","name","label","type","e","value","Button","variant","color","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c68abd82.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bat.56f6e861.png\";","export default __webpack_public_path__ + \"static/media/ball.837b429c.png\";","const dev = \"http://localhost:5000\"\r\nexport const baseurl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","export default __webpack_public_path__ + \"static/media/loadinglive.ece48b52.gif\";","// import '../../App.css';\r\nimport React, { useEffect, useState } from 'react';\r\n// import { useHistory } from \"react-router-dom\";\r\nimport Bat from '../images/bat.png'\r\nimport Ball from '../images/ball.png'\r\nimport axios from 'axios';\r\nimport { baseurl } from '../core';\r\nimport io from 'socket.io-client';\r\nimport \"../App.css\"\r\nimport loading from '../images/loadinglive.gif'\r\n\r\nfunction Dashboard() {\r\n    const [posts, setPosts] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseurl}/api/v1/post`,\r\n            {\r\n                withCredentials: true\r\n            })\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setPosts(response.data)\r\n                console.log(posts)\r\n            })\r\n            .catch(err => alert(\"Error in getting data\"))\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // const socket = io(\"https://mern-cricket-dashboard.herokuapp.com\");\r\n        // to connect with locally running Socker.io server\r\n        const socket = io(baseurl);\r\n\r\n        socket.on('connect', function () {\r\n            console.log(\"connected to server\")\r\n        });\r\n\r\n        socket.on('disconnect', function (message) {\r\n            console.log(\"disconnected from server: \", message);\r\n        });\r\n\r\n        socket.on('POSTS', function (data) {\r\n            console.log(data);\r\n            setPosts((prev) => [data, ...prev])\r\n            console.log(posts)\r\n\r\n        });\r\n\r\n\r\n        return () => {\r\n            socket.close();\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"dash-main\">\r\n                <div className=\"main\">\r\n                    {posts?.map((posts, index) => (\r\n                        <>\r\n                            <div className=\"dash-main\">\r\n                                <div className=\"details\">\r\n                                    <h3 id=\"title\">{posts.teamA} Vs {posts.teamB}</h3>\r\n                                    <h6 className=\"battingteam\">format: {posts.format}</h6>\r\n                                    <h6 className=\"battingteam\">Batting team: {posts.battingteam}</h6>\r\n                                </div>\r\n                                <img className=\"loading\" src={loading} />\r\n\r\n                                <div className=\"dashboard\">\r\n                                    <div className=\"battingside\">\r\n                                        <h3 className=\"team\">{posts.teamA}</h3>\r\n                                        <h4><span><img className=\"batimg\" src={Bat} /></span><span>Runs: {posts.runs}</span>/<span>{posts.wicket}</span></h4>\r\n                                        <h4><span>{posts.batsmanA} </span><span>{posts.batsmanAruns}</span> <span>({posts.batsmanAballs})</span></h4>\r\n                                        <h4><span>{posts.batsmanB} </span><span>{posts.batsmanBruns}</span> <span>({posts.batsmanBballs})</span></h4>\r\n                                        <h4 className=\"runrate\">Run rate <span>{posts.runrate}</span></h4>\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n                                    <div className=\"bowlingside\">\r\n\r\n                                        <h3 className=\"team\">{posts.teamB}</h3>\r\n                                        <h4><span><img className=\"ballimg\" src={Ball} /></span> <span>Over:{posts.overs}</span></h4>\r\n\r\n                                        <h4><span>{posts.bowlerA} </span><span>{posts.bowlerAover}</span> <span>({posts.bowlerAruns}</span>/<span>{posts.bowlerAwickets})</span></h4>\r\n                                        <h4><span>{posts.bowlerB} </span><span>{posts.bowlerBover}</span> <span>({posts.bowlerBruns}</span>/<span>{posts.bowlerAwickets})</span></h4>\r\n                                        <h4 className=\"target\">Target <span>{posts.target}</span></h4>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n\r\n                    ))}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n","import '../App.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { baseurl } from '../core';\r\n\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    post: yup\r\n        .string('Enter your password')\r\n        .min(2, 'Name should be of minimum 4 characters length')\r\n        .required('Name is required'),\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\nfunction Control() {\r\n\r\n    const [score, setScore] = useState({\r\n        post: \"\",\r\n        runs: \"\",\r\n        overs: \"\",\r\n        teamA: \"\",\r\n        teamB: \"\",\r\n        wicket: \"\",\r\n        batsmanA: \"\",\r\n        batsmanB: \"\",\r\n        batsmanAruns: \"\",\r\n        batsmanBruns: \"\",\r\n        batsmanAballs: \"\",\r\n        batsmanBballs: \"\",\r\n        bowlerA: \"\",\r\n        bowlerB: \"\",\r\n        bowlerAruns: \"\",\r\n        bowlerBruns: \"\",\r\n        bowlerAover: \"\",\r\n        bowlerBover: \"\",\r\n        bowlerAwickets: \"\",\r\n        bowlerBwickets: \"\",\r\n        target: \"\",\r\n        runrate: \"\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseurl}/api/v1/score`)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setScore(response.data)\r\n                console.log(score)\r\n            })\r\n            .catch(err => alert(\"Error in getting data\"))\r\n    }, [])\r\n\r\n\r\n\r\n    const submit = (values) => {\r\n\r\n        console.log(\"values\", values)\r\n\r\n        axios.post(`${baseurl}/api/v1/post`,\r\n            {\r\n                post: values.post,\r\n                runs: values.runs,\r\n                overs: values.overs,\r\n                teamA: values.teamA,\r\n                teamB: values.teamB,\r\n                wicket: values.wicket,\r\n                batsmanA: values.batsmanA,\r\n                batsmanB: values.batsmanB,\r\n                batsmanAruns: values.batsmanAruns,\r\n                batsmanBruns: values.batsmanBruns,\r\n                batsmanAballs: values.batsmanAballs,\r\n                batsmanBballs: values.batsmanBballs,\r\n                bowlerA: values.bowlerA,\r\n                bowlerB: values.bowlerB,\r\n                bowlerAruns: values.bowlerAruns,\r\n                bowlerBruns: values.bowlerBruns,\r\n                bowlerAover: values.bowlerAover,\r\n                bowlerBover: values.bowlerBover,\r\n                bowlerAwickets: values.bowlerAwickets,\r\n                bowlerBwickets: values.bowlerBwickets,\r\n                target: values.target,\r\n                runrate: values.runrate,\r\n            }\r\n        )\r\n\r\n\r\n            .then(res => {\r\n                console.log(\"postdata\", res.data);\r\n                setScore(res.data)\r\n\r\n\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            post: '',\r\n            runs: score.runs,\r\n            overs: score.overs,\r\n            wicket: '',\r\n            teamA: score.teamA,\r\n            teamB: '',\r\n            batsmanA: '',\r\n            batsmanB: '',\r\n            batsmanAruns: '',\r\n            batsmanBruns: '',\r\n            batsmanAballs: '',\r\n            batsmanBballs: '',\r\n            bowlerA: '',\r\n            bowlerB: '',\r\n            bowlerAruns: '',\r\n            bowlerBruns: '',\r\n            bowlerAover: '',\r\n            bowlerBover: '',\r\n            bowlerAwickets: '',\r\n            bowlerBwickets: '',\r\n            target: '',\r\n            runrate: '',\r\n\r\n        },\r\n        onSubmit: submit\r\n    },\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <div className=\"app-main\">\r\n                <div className=\"post-main\">\r\n\r\n                    <form id=\"post-form\" onSubmit={formik.handleSubmit}>\r\n\r\n                        <h3 className=\"side\"> Score Control Panel</h3>\r\n                        <h1>{score.teamA}</h1>\r\n\r\n                        <div className=\"teamcontrol\">\r\n\r\n                            <TextField\r\n                                id=\"outlined-basic\"\r\n                                name=\"teamA\"\r\n                                label=\"teamA\"\r\n                                type=\"text\"\r\n                                className=\"box\"\r\n                                id=\"team\"\r\n\r\n                                value={score.teamA}\r\n                                // onChange={formik.handleChange}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, teamA: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n\r\n                                error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                variant=\"outlined\" />\r\n\r\n                            <TextField\r\n                                id=\"outlined-basic\"\r\n                                name=\"teamB\"\r\n                                label=\"teamB\"\r\n                                type=\"text\"\r\n                                className=\"box\"\r\n                                id=\"team\"\r\n\r\n                                value={formik.values.teamB}\r\n                                onChange={formik.handleChange}\r\n\r\n\r\n                                error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                variant=\"outlined\" />\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"control\">\r\n                            <div className=\"battingcontrol\">\r\n\r\n                                <h3 className=\"side\">Batting Side</h3>\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"post\"\r\n                                    label=\"format\"\r\n                                    type=\"text\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    // value={score.post}\r\n                                    // onChange={(e) => {\r\n                                    //     setScore((prev) => {\r\n                                    //         return { ...prev, post: e.target.value }\r\n                                    //     })\r\n                                    // }}\r\n                                    value={formik.values.post}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"runs\"\r\n                                    label=\"runs\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.runs}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"wicket\"\r\n                                    label=\"wicket\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.wicket}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"batsmanA\"\r\n                                    label=\"batsmanA\"\r\n                                    type=\"text\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.batsmanA}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"batsmanAruns\"\r\n                                    label=\"batsmanAruns\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.batsmanAruns}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"batsmanAballs\"\r\n                                    label=\"batsmanAballs\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.batsmanAballs}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"batsmanB\"\r\n                                    label=\"batsmanB\"\r\n                                    type=\"text\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.batsmanB}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"batsmanBruns\"\r\n                                    label=\"batsmanBruns\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.batsmanBruns}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"batsmanBballs\"\r\n                                    label=\"batsmanBballs\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.batsmanBballs}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"runrate\"\r\n                                    label=\"runrate\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.runrate}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n                            </div>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"bowlingcontrol\">\r\n                                <h3 className=\"side\">Bowling Side</h3>\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"overs\"\r\n                                    label=\"overs\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.overs}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"target\"\r\n                                    label=\"target\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.target}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"bowlerA\"\r\n                                    label=\"bowlerA\"\r\n                                    type=\"text\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.bowlerA}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"bowlerAruns\"\r\n                                    label=\"bowlerAruns\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.bowlerAruns}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"bowlerAwickets\"\r\n                                    label=\"bowlerAwickets\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.bowlerAwickets}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"bowlerAover\"\r\n                                    label=\"bowlerAover\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.bowlerAover}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"bowlerB\"\r\n                                    label=\"bowlerB\"\r\n                                    type=\"text\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.bowlerB}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"bowlerBruns\"\r\n                                    label=\"bowlerBruns\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.bowlerBruns}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"bowlerBwickets\"\r\n                                    label=\"bowlerBwickets\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.bowlerBwickets}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"bowlerBover\"\r\n                                    label=\"bowlerBover\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={formik.values.bowlerBover}\r\n                                    onChange={formik.handleChange}\r\n\r\n\r\n                                    error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                                    helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        <Button id=\"btn\" variant=\"contained\" color=\"success\" type=\"submit\">\r\n                            Update\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Control;\r\n\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { Navbar, Container, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nfunction Navigation() {\r\n\r\n    return (\r\n        <>\r\n            <Navbar bg=\"success\" expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Brand className=\"nav-main\">Score Board</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"me-auto\">\r\n                           \r\n                            <li>\r\n                                <Link to=\"/\" className=\"nav-itms\">Dashboard</Link>\r\n                            </li>\r\n{/* \r\n                            <li>\r\n                                <Link to=\"/control\" className=\"nav-itms\">Control</Link>\r\n                            </li> */}\r\n\r\n                            <li>\r\n                                <Link to=\"/admin\" className=\"nav-itms\">admin</Link>\r\n                            </li>\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navigation;    ","import '../App.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { baseurl } from '../core';\r\n\r\n\r\nfunction Admin() {\r\n\r\n    const [score, setScore] = useState({\r\n        format: \"\",\r\n        runs: \"\",\r\n        overs: \"\",\r\n        teamA: \"\",\r\n        teamB: \"\",\r\n        battingteam:\"\",\r\n        wicket: \"\",\r\n        batsmanA: \"\",\r\n        batsmanB: \"\",\r\n        batsmanAruns: \"\",\r\n        batsmanBruns: \"\",\r\n        batsmanAballs: \"\",\r\n        batsmanBballs: \"\",\r\n        bowlerA: \"\",\r\n        bowlerB: \"\",\r\n        bowlerAruns: \"\",\r\n        bowlerBruns: \"\",\r\n        bowlerAover: \"\",\r\n        bowlerBover: \"\",\r\n        bowlerAwickets: \"\",\r\n        bowlerBwickets: \"\",\r\n        target: \"\",\r\n        runrate: \"\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseurl}/api/v1/score`)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setScore(response.data)\r\n                console.log(score)\r\n            })\r\n            .catch(err => alert(\"Error in getting data\"))\r\n    }, [])\r\n\r\n\r\n    const submit = () => {\r\n        axios.post(`${baseurl}/api/v1/post`, score)\r\n            .then((res) => {\r\n                console.log(\"res: \", res.data);\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"app-main\">\r\n                <div className=\"post-main\">\r\n\r\n                    <form id=\"post-form\" onSubmit={submit}>\r\n                        <h3 className=\"side\"> Score Control Panel</h3>\r\n\r\n                        <div className=\"teamcontrol\">\r\n\r\n                            <TextField\r\n                                id=\"outlined-basic\"\r\n                                name=\"teamA\"\r\n                                label=\"teamA\"\r\n                                type=\"text\"\r\n                                className=\"box\"\r\n                                id=\"team\"\r\n                                variant=\"outlined\"\r\n\r\n                                value={score.teamA}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, teamA: e.target.value }\r\n                                    })\r\n                                }}\r\n                            />\r\n\r\n                            <TextField\r\n                                id=\"outlined-basic\"\r\n                                name=\"teamB\"\r\n                                label=\"teamB\"\r\n                                type=\"text\"\r\n                                className=\"box\"\r\n                                id=\"team\"\r\n\r\n                                value={score.teamB}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, teamB: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                                variant=\"outlined\" />\r\n\r\n\r\n                            <TextField\r\n                                id=\"outlined-basic\"\r\n                                name=\"battingteam\"\r\n                                label=\"battingteam\"\r\n                                type=\"text\"\r\n                                className=\"box\"\r\n                                id=\"team\"\r\n\r\n                                value={score.battingteam}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, battingteam: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                                variant=\"outlined\" />\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"control\">\r\n                            <div className=\"battingcontrol\">\r\n\r\n                                <h3 className=\"side\">Batting Side</h3>\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"post\"\r\n                                    label=\"format\"\r\n                                    type=\"text\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.format}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, format: e.target.value }\r\n                                        })\r\n                                    }}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"runs\"\r\n                                    label=\"runs\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.runs}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, runs: e.target.value }\r\n                                        })\r\n                                    }}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"wicket\"\r\n                                    label=\"wicket\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.wicket}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, wicket: e.target.value }\r\n                                        })\r\n                                    }}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"batsmanA\"\r\n                                    label=\"batsmanA\"\r\n                                    type=\"text\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.batsmanA}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, batsmanA: e.target.value }\r\n                                        })\r\n                                    }}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"batsmanAruns\"\r\n                                    label=\"batsmanAruns\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.batsmanAruns}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, batsmanAruns: e.target.value }\r\n                                        })\r\n                                    }}\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"batsmanAballs\"\r\n                                    label=\"batsmanAballs\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.batsmanAballs}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, batsmanAballs: e.target.value }\r\n                                        })\r\n                                    }}\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"batsmanB\"\r\n                                    label=\"batsmanB\"\r\n                                    type=\"text\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.batsmanB}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, batsmanB: e.target.value }\r\n                                        })\r\n                                    }}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"batsmanBruns\"\r\n                                    label=\"batsmanBruns\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.batsmanBruns}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, batsmanBruns: e.target.value }\r\n                                        })\r\n                                    }}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"batsmanBballs\"\r\n                                    label=\"batsmanBballs\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.batsmanBballs}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, batsmanBballs: e.target.value }\r\n                                        })\r\n                                    }}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"runrate\"\r\n                                    label=\"runrate\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.runrate}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, runrate: e.target.value }\r\n                                        })\r\n                                    }}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n                            </div>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"bowlingcontrol\">\r\n                                <h3 className=\"side\">Bowling Side</h3>\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"overs\"\r\n                                    label=\"overs\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.overs}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, overs: e.target.value }\r\n                                        })\r\n                                    }}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"target\"\r\n                                    label=\"target\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.target}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, target: e.target.value }\r\n                                        })\r\n                                    }}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"bowlerA\"\r\n                                    label=\"bowlerA\"\r\n                                    type=\"text\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.bowlerA}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, bowlerA: e.target.value }\r\n                                        })\r\n                                    }}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"bowlerAruns\"\r\n                                    label=\"bowlerAruns\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.bowlerAruns}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, bowlerAruns: e.target.value }\r\n                                        })\r\n                                    }}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"bowlerAwickets\"\r\n                                    label=\"bowlerAwickets\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.bowlerAwickets}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, bowlerAwickets: e.target.value }\r\n                                        })\r\n                                    }}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"bowlerAover\"\r\n                                    label=\"bowlerAover\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.bowlerAover}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, bowlerAover: e.target.value }\r\n                                        })\r\n                                    }}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"bowlerB\"\r\n                                    label=\"bowlerB\"\r\n                                    type=\"text\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.bowlerB}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, bowlerB: e.target.value }\r\n                                        })\r\n                                    }}\r\n                                    variant=\"outlined\" />\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"bowlerBruns\"\r\n                                    label=\"bowlerBruns\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.bowlerBruns}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, bowlerBruns: e.target.value }\r\n                                        })\r\n                                    }}\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"bowlerBwickets\"\r\n                                    label=\"bowlerBwickets\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.bowlerBwickets}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, bowlerBwickets: e.target.value }\r\n                                        })\r\n                                    }}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    name=\"bowlerBover\"\r\n                                    label=\"bowlerBover\"\r\n                                    type=\"number\"\r\n                                    className=\"box\"\r\n                                    id=\"postbox\"\r\n\r\n                                    value={score.bowlerBover}\r\n                                    onChange={(e) => {\r\n                                        setScore((prev) => {\r\n                                            return { ...prev, bowlerBover: e.target.value }\r\n                                        })\r\n                                    }}\r\n\r\n                                    variant=\"outlined\" />\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        <Button id=\"btn\" variant=\"contained\" color=\"success\" type=\"submit\">\r\n                            Update\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Admin;\r\n\r\n","import './App.css';\nimport Dashboard from './components/Dashboard';\nimport Control from './components/Control';\nimport Navigation from './components/Navbar';\nimport Admin from './components/Admin';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  useHistory,\n  Route,\n  Routes,\n  Redirect\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Navigation/>\n        <Switch>\n          <Route exact path=\"/\">\n              <Dashboard/>\n          </Route>\n\n          {/* <Route path=\"/control\">\n              <Control/>\n          </Route> */}\n\n          <Route path=\"/admin\">\n              <Admin/>\n          </Route>\n\n        </Switch>\n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n\n      <App />\n    </Router>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}